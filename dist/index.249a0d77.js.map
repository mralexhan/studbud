{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-a1d74c0d3a1e640a.js","node_modules/@parcel/runtime-js/lib/runtime-92c384366c921939.js","node_modules/@parcel/runtime-js/lib/runtime-78656a0965627852.js","node_modules/@parcel/runtime-js/lib/runtime-ab34779011fa4166.js","node_modules/@parcel/runtime-js/lib/runtime-169d014be76852a3.js","node_modules/@parcel/runtime-js/lib/runtime-c7a6a01c067ce1d9.js","public/components/navmenu.js","public/components/musicplayer.js","public/tasklist.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"oDiuz\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1CVMw\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"80yDX\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bL4FB\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"di1bY\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"95vs3\\\":\\\"index.249a0d77.js\\\",\\\"oDiuz\\\":\\\"Trashcan.52487ec3.png\\\",\\\"1CVMw\\\":\\\"CompNo.1ed3be4c.png\\\",\\\"80yDX\\\":\\\"CompYes.0289cd16.png\\\",\\\"bL4FB\\\":\\\"Remove.0e8c063d.png\\\",\\\"di1bY\\\":\\\"Add.a61be1b9.png\\\"}\"));","/*javascript for the nav bar to be able to activate. Code from https://codepen.io/robdongas/pen/MWvKMRp*/\r\nconst toggler = document.querySelector('.menu-toggle');\r\nconst menu = document.querySelector('.menu');\r\n\r\n/*\r\n * Toggles on and off the 'active' class on the menu\r\n * and the toggler button.\r\n */\r\ntoggler.addEventListener('click', () => {\r\n  toggler.classList.toggle('active');\r\n  menu.classList.toggle('active');\r\n})","/*javascript for music player*/\r\n\r\n/*code modified and built off from https://codepen.io/ozzie/pen/YPOBEJ*/\r\n\r\n//counts number of songs on the page\r\nvar numSongs = document.querySelectorAll(\"audio\").length;\r\n\r\nvar songIndex = 1;\r\n\r\n//grabs a variety of elements from the document to use later\r\nvar music = document.getElementById(\"song\" + songIndex);\r\nvar playButton = document.getElementById(\"play\");\r\nvar pauseButton = document.getElementById(\"pause\");\r\nvar playhead = document.getElementById(\"elapsed\");\r\nvar timeline = document.getElementById(\"slider\");\r\nvar timer = document.getElementById(\"timer\");\r\nvar duration = music.duration;\r\nvar volumeSlider = document.getElementById(\"volume\");\r\nvar prevSong = document.getElementById(\"prevSong\");\r\nvar nextSong = document.getElementById(\"nextSong\");\r\nvar playlistButton = document.querySelector(\".playlistButton\");\r\nvar songList = document.querySelector(\".songList\");\r\nvar currentSongName = document.getElementById(\"currentSongName\");\r\nvar currentArtist = document.getElementById(\"currentArtist\");\r\n\r\n//sets pause button to hidden by default\r\npauseButton.style.display = \"none\";\r\n\r\n//runs the timeupdate function whenever the music is updated\r\nmusic.addEventListener(\"timeupdate\", timeUpdate, false);\r\n//plays next song when next song button is pressed\r\nnextSong.addEventListener(\"click\", playNext); \r\n//plays previous song when previous song button is pressed\r\nprevSong.addEventListener(\"click\", playPrev);\r\n\r\n//updates the timer and timeline when music is playinh\r\nfunction timeUpdate() {\r\n\r\n  //grabs percentage of song that has been played\r\n\tvar playPercent = (music.currentTime / duration) * 100;\r\n\r\n  //sets the width of the line that shows how much has been played based on percentage\r\n\tplayhead.style.width = ((playPercent * 0.01) * timeline.offsetWidth) + \"px\";\r\n\r\n  //checks how many minutes and seconds have been played\r\n\tvar secondsIn = Math.floor(music.currentTime%60);\r\n  var minutesIn = Math.floor(music.currentTime/60);\r\n\r\n  //updates the little timer underneath the bar based on how much of the song has been played\r\n\ttimer.innerHTML = String(minutesIn).padStart(2, \"0\") + \":\" + String(secondsIn).padStart(2, \"0\");\r\n\r\n\r\n}\r\n\r\n//hides play button and shows pause button when play button is clicked\r\nplayButton.onclick = function() {\r\n\tmusic.play();\r\n\tplayButton.style.display = \"none\";\r\n\tpause.style.display = \"initial\";\r\n}\r\n\r\n//hides pause button and shows play button when pause button is clicked\r\npauseButton.onclick = function() {\r\n\tmusic.pause();\r\n\tplayButton.style.display = \"initial\";\r\n\tpause.style.display = \"none\";\r\n}\r\n\r\n\r\n//function that plays next song\r\nfunction playNext(){\r\n  playButton.style.display = \"none\"; //hides play button\r\n\tpause.style.display = \"initial\"; //shows pause button\r\n  music.pause(); //stops the current song\r\n  music.currentTime = 0; //resets the song back to beginning\r\n  songIndex += 1; //increments the song index so it will play the next song\r\n  //if songIndex goes beyond the current number of songs, it goes back to the first one\r\n  if (songIndex > numSongs){\r\n    songIndex = 1;\r\n  }\r\n  music = document.getElementById(\"song\" + songIndex); //changes current playing song to the next song\r\n\r\n  //changes the displayed song name and artist\r\n  var songInfo = music.parentNode.children[1].children;\r\n  currentSongName.innerHTML = songInfo[0].innerHTML\r\n  currentArtist.innerHTMl = songInfo[1].innerHTMl\r\n  music.play(); //plays the new song\r\n  music.addEventListener(\"timeupdate\", timeUpdate, false);\r\n}\r\n\r\n//function that plays previous song\r\nfunction playPrev(){\r\n  playButton.style.display = \"none\"; //hides play button\r\n\tpause.style.display = \"initial\"; //shows pause button\r\n  music.pause(); //stops the current song\r\n  music.currentTime = 0; //resets the song back to beginning\r\n  songIndex -= 1; //increments the song index so it will play the next song\r\n  //if songIndex goes beyond the current number of songs, it goes back to the first one\r\n  if (songIndex < 1){\r\n    songIndex = numSongs;\r\n  }\r\n  music = document.getElementById(\"song\" + songIndex); //changes current playing song to the next song\r\n\r\n  //changes the displayed song name and artist\r\n  var songInfo = music.parentNode.children[1].children;\r\n  currentSongName.innerHTML = songInfo[0].innerHTML\r\n  currentArtist.innerHTMl = songInfo[1].innerHTMl\r\n  music.play(); //plays the new song\r\n  music.addEventListener(\"timeupdate\", timeUpdate, false);\r\n}\r\n\r\n\r\n//makes it so every element with class \"songs\" will behave the same way when clicked. Code from https://www.codegrepper.com/code-examples/javascript/js+add+event+listener+to+all+elements+with+class\r\ndocument.querySelectorAll(\".songs\").forEach(item =>{\r\n  item.addEventListener(\"click\", event =>{\r\n    playButton.style.display = \"none\"; //hides play button\r\n  \tpause.style.display = \"initial\"; //shows pause button\r\n    music.pause(); //stops the current song\r\n    music.currentTime = 0; //resets the song back to beginning\r\n\r\n    songId = item.children[2].id\r\n    songIndex = parseInt(songId.substring(songId.length-1)); //changes songIndex to the index of song in playlist\r\n    music = document.getElementById(\"song\" + songIndex); //changes current playing song to the next song\r\n  \r\n    //changes the displayed song name and artist\r\n    var songInfo = music.parentNode.children[1].children;\r\n    currentSongName.innerHTML = songInfo[0].innerHTML\r\n    currentArtist.innerHTMl = songInfo[1].innerHTMl\r\n    music.play(); //plays the new song\r\n    music.addEventListener(\"timeupdate\", timeUpdate, false);\r\n  })\r\n})\r\n\r\n\r\n\r\nmusic.addEventListener(\"canplaythrough\", function () {\r\n\tduration = music.duration;\r\n}, false);\r\n\r\n\r\n//volume slider javascript. ccode from https://stackoverflow.com/questions/62160275/js-audio-volume-slider\r\nvolumeSlider.addEventListener(\"change\", function(e){\r\n  music.volume = e.currentTarget.value/100;\r\n})\r\n\r\n\r\n//Makes the songlist show up and disappear when playlist button is clicked\r\nvar songListOut = false;\r\nplaylistButton.addEventListener(\"click\", function(){\r\n  songList.classList.toggle(\"active\");\r\n});\r\n","import \"./components/navmenu.js\";\r\nimport \"./components/musicplayer.js\";\r\n\r\n\r\n\r\n//Task List js starts here\r\nconst taskForm = document.querySelector(\".newTaskForm\");\r\nconst taskColumnForm = document.querySelector(\".newTaskColumnForm\");\r\n\r\nvar taskColumnList = document.querySelector(\".taskContent > ul\")\r\nvar tasklist = document.querySelector(\".taskColumn > ul\");\r\n\r\nvar taskNameInput = document.getElementById(\"taskName\");\r\nvar taskDueInput = document.getElementById(\"taskDue\");\r\nvar taskCompInput = document.getElementById(\"taskComp\");\r\nvar taskPriorityInput = document.getElementById(\"taskPriority\");\r\nvar addTaskColumnButton = document.getElementById(\"taskColumnAdd\");\r\n\r\nvar taskListArray = [];\r\nvar taskColumnArray = [];\r\n\r\n//showLocalColumns(); //shows locally stored information on page\r\n\r\n//creates a task column on page at the beginning if taskColumnList doesn't have child nodes\r\n/*if (taskColumnList.childNodes.length == 3){\r\n  addTaskColumn(\"To Do\", \"#ED9D28\");\r\n}*/\r\n\r\n\r\ndocument.getElementById(\"taskColumnAdd\").addEventListener(\"click\", showAddTaskColumnForm);\r\ndocument.getElementById(\"newTaskColumnOut\").addEventListener(\"click\", closeAddTaskColumnForm);\r\ndocument.getElementById(\"taskAdd\").addEventListener(\"click\", showAddTaskForm);\r\ndocument.getElementById(\"newTaskOut\").addEventListener(\"click\", closeAddTaskForm);\r\n\r\n\r\n\r\n//grabs the information from the new task form when user clicks submit button\r\ntaskForm.addEventListener(\"submit\", function(event) {\r\n  event.preventDefault();\r\n  let task = taskNameInput.value;\r\n  let dueDate = taskDueInput.value;\r\n  let estimatedTime = taskCompInput.value;\r\n  let priorityRating = taskPriorityInput.options[taskPriorityInput.selectedIndex].value;\r\n  /* if (task) {\r\n    addTask(task, dueDate, estimatedTime, priorityRating, false);\r\n  } */\r\n  addTask(task, dueDate, estimatedTime, priorityRating, false);\r\n})\r\n\r\ntaskColumnForm.addEventListener(\"submit\", function(event){\r\n  event.preventDefault();\r\n  let columnName = taskColumnName.value;\r\n  let columnColor = colorpicker.value;\r\n  addTaskColumn(columnName, columnColor);\r\n})\r\n\r\nfunction showAddTaskForm() {\r\n  document.querySelector(\".newTaskForm\").style.display = \"initial\";\r\n}\r\n\r\nfunction closeAddTaskForm() {\r\n  document.querySelector(\".newTaskForm\").style.display = \"none\";\r\n}\r\n\r\nfunction showAddTaskColumnForm() {\r\n  document.querySelector(\".newTaskColumnForm\").style.display = \"initial\";\r\n}\r\n\r\nfunction closeAddTaskColumnForm() {\r\n  document.querySelector(\".newTaskColumnForm\").style.display = \"none\";\r\n}\r\n\r\nfunction addTask(taskName, dueDate, estimatedTime, priorityRating, completionStatus) {\r\n  let d = new Date();\r\n  let dateCreated = d.getFullYear();\r\n  let task = {\r\n    id: Date.now(),\r\n    taskName,\r\n    dueDate,\r\n    dateCreated,\r\n    estimatedTime,\r\n    priorityRating,\r\n    completionStatus\r\n  };\r\n  taskListArray.push(task);\r\n  renderTask(task);\r\n}\r\n\r\nfunction addTaskColumn(columnName, columnColor){\r\n  let taskcolumn = {\r\n    id: Date.now(),\r\n    columnName,\r\n    columnColor\r\n  }\r\n  taskColumnArray.push(taskcolumn);\r\n  renderTaskColumn(taskcolumn);\r\n}\r\n\r\nfunction renderTask(task) {\r\n  //create HTML elements\r\n\r\n  //creates task card div\r\n  let taskCard = document.createElement(\"div\"); \r\n  taskCard.setAttribute(\"data-id\", task.id);\r\n  taskCard.classList.add(\"taskCard\");\r\n\r\n  //creates task card title div\r\n  let taskCardTitle = document.createElement(\"div\");\r\n  taskCardTitle.classList.add(\"taskCardTitle\")\r\n  //creates task card header (h3)\r\n  let taskCardHeader = document.createElement(\"h3\");\r\n  taskCardHeader.innerHTML = task.taskName;\r\n  taskCardTitle.appendChild(taskCardHeader); //adds h3 to taskCardTitle div\r\n  taskCard.appendChild(taskCardTitle); //adds taskCardTitle to taskCard div\r\n\r\n  //creates taskCardInfo div\r\n  let taskCardInfo = document.createElement(\"div\");\r\n  taskCardInfo.classList.add(\"taskCardInfo\");\r\n  //creates text for the different task information\r\n  let dueDate = document.createElement(\"p\");\r\n  dueDate.innerHTML = \"Due Date: \" + task.dueDate;\r\n  let priorityRating = document.createElement(\"p\");\r\n\r\n  //javascript for priority\r\n  let priorityColor = document.createElement(\"span\");\r\n  let priorityText = task.priorityRating.substring(0,1).toUpperCase() + task.priorityRating.substring(1); //capitalizes the priority text\r\n  priorityColor.insertAdjacentText(\"afterbegin\", priorityText); //adds text to the span element\r\n  //changes priority text color based on what value it is\r\n  if (task.priorityRating == \"low\"){\r\n    priorityColor.classList.add(\"pLow\");\r\n  }\r\n  if (task.priorityRating == \"medium\"){\r\n    priorityColor.classList.add(\"pMedium\");\r\n  }\r\n  if (task.priorityRating == \"high\"){\r\n    priorityColor.classList.add(\"pHigh\");\r\n  }\r\n  priorityRating.innerHTML = \"Priority Rating: \";\r\n  priorityRating.appendChild(priorityColor);\r\n\r\n  //estimated time javascript\r\n  let estimatedTime = document.createElement(\"p\");\r\n  let totalMinutes = task.estimatedTime;\r\n  let hours = Math.floor(totalMinutes / 60);\r\n  let minutes = totalMinutes % 60;\r\n  estimatedTime.innerHTML = \"Est. Time to Complete: \" + hours + \"H\" + minutes +\"M\";\r\n  \r\n  taskCardInfo.appendChild(dueDate);\r\n  taskCardInfo.appendChild(priorityRating);\r\n  taskCardInfo.appendChild(estimatedTime);\r\n  taskCard.appendChild(taskCardInfo);\r\n\r\n  //creates the icon section of the task card\r\n  let taskCardIcons = document.createElement(\"div\");\r\n  taskCardIcons.classList.add(\"taskCardIcons\");\r\n  //creates a delete button for the task\r\n  let delButton = document.createElement(\"button\");\r\n  let delButtonImg = document.createElement(\"img\"); //creates image in document\r\n  delButtonImg.classList.add(\"icon\"); //adds class \"icon\" to image\r\n  delButtonImg.src = require(\"./images/Trashcan.png\"); //sets image src\r\n  delButtonImg.alt = \"Delete Task Card Icon\";\r\n  delButton.appendChild(delButtonImg); //puts image under the html button container\r\n  taskCardIcons.appendChild(delButton);\r\n  //creates completion buttons for the task\r\n  let compNoButton = document.createElement(\"button\");\r\n  let compNoButtonImg = document.createElement(\"img\");\r\n  compNoButtonImg.classList.add(\"icon\");\r\n  compNoButtonImg.src = require(\"./images/CompNo.png\");\r\n  compNoButtonImg.alt = \"Task Not Completed Icon\";\r\n  compNoButton.appendChild(compNoButtonImg);\r\n  let compYesButton = document.createElement(\"button\");\r\n  let compYesButtonImg = document.createElement(\"img\");\r\n  compYesButtonImg.classList.add(\"icon\");\r\n  compYesButtonImg.src = require(\"./images/CompYes.png\");\r\n  compYesButtonImg.alt = \"Task Completed Icon\";\r\n  compYesButton.appendChild(compYesButtonImg);\r\n  //adds buttons to icon secton div\r\n  taskCardIcons.appendChild(compNoButton);\r\n  taskCardIcons.appendChild(compYesButton);\r\n  taskCard.appendChild(taskCardIcons);\r\n\r\n  //makes compYesButton invisible by default\r\n  compYesButton.style.display = \"none\";\r\n  //Puts the tasklist into the unlisted list in the taskColumn\r\n  tasklist.appendChild(taskCard);\r\n\r\n\r\n  //clears the input form\r\n  taskForm.reset();\r\n  //makes the form disappear from the screen\r\n  taskForm.style.display = \"none\";\r\n\r\n  //writes task object to local storage\r\n  let taskObject = {\r\n    \"id\": task.id,\r\n    \"taskName\": task.taskName,\r\n    \"dueDate\": task.dueDate,\r\n    \"dateCreated\": task.dateCreated,\r\n    \"estimatedTime\": task.estimatedTime,\r\n    \"priorityRating\": task.priorityRating,\r\n    \"completionStatus\": task.completionStatus\r\n  }\r\n\r\n  let tasks;\r\n\r\n  if(localStorage.getItem(\"tasks\") == null){\r\n    tasks = [];\r\n  }\r\n  else{\r\n    tasks = localStorage.getItem(\"tasks\");\r\n    tasks = JSON.parse(tasks);\r\n  }\r\n\r\n  let existingTask = tasks.find(function(task){\r\n    return task.id === tasks.id;\r\n  })\r\n\r\n  if(!existingTask){\r\n    tasks.push(taskObject);\r\n    let taskJSON = JSON.stringify(tasks);\r\n    localStorage.setItem(\"tasks\", taskJSON);\r\n  }\r\n\r\n  \r\n  \r\n  //removes the task when delButton is pressed\r\n  delButton.addEventListener(\"click\", function(event){\r\n    event.preventDefault();\r\n    taskCard.remove();\r\n    localStorage.removeItem(tasks)\r\n  })\r\n\r\n\r\n  /*toggles between compNoButton and compYesButton when you click them*/\r\n  compNoButton.addEventListener(\"click\", function(event){\r\n    event.preventDefault();\r\n    compYesButton.style.display = \"initial\";\r\n    compNoButton.style.display = \"none\";\r\n    task.completionStatus = true;\r\n  })\r\n\r\n  compYesButton.addEventListener(\"click\", function(event){\r\n    event.preventDefault();\r\n    compYesButton.style.display = \"none\";\r\n    compNoButton.style.display = \"initial\";\r\n    task.completionStatus = false;\r\n  })\r\n  \r\n}\r\n\r\nfunction renderTaskColumn(taskcolumn) {\r\n  //creates task column and h2 \r\n  let taskColumn = document.createElement(\"div\");\r\n  taskColumn.classList.add(\"taskColumn\");\r\n  taskColumn.style.minHeight = \"20vh\"; //styles minHeight here so it won't affect other columns\r\n  taskColumn.style.backgroundColor = taskcolumn.columnColor;\r\n  let taskColumnHead = document.createElement(\"h2\");\r\n  taskColumnHead.innerHTML = taskcolumn.columnName;\r\n  taskColumn.appendChild(taskColumnHead);\r\n\r\n  //creates delete task column button\r\n  let taskOutButton = document.createElement(\"button\");\r\n  taskOutButton.classList.add(\"taskOut\");\r\n  let taskOutImg = document.createElement(\"img\");\r\n  taskOutImg.classList.add(\"icon\");\r\n  taskOutImg.src = require(\"./images/Remove.png\");\r\n  taskOutImg.alt = \"Remove Task Column Icon\";\r\n  taskOutButton.appendChild(taskOutImg);\r\n  taskColumn.appendChild(taskOutButton);\r\n\r\n  //creates empty list where task cards go\r\n  let tasks = document.createElement(\"ul\");\r\n  taskColumn.appendChild(tasks);\r\n\r\n  //creates add task button\r\n  let addTaskButton = document.createElement(\"button\");\r\n  addTaskButton.classList.add(\"taskAdd\");\r\n  let addTaskButtonIcon = document.createElement(\"img\");\r\n  addTaskButtonIcon.classList.add(\"icon\");\r\n  addTaskButtonIcon.src = require(\"./images/Add.png\");\r\n  addTaskButtonIcon.alt = \"Add Task Button Icon\"\r\n  addTaskButton.appendChild(addTaskButtonIcon);\r\n  taskColumn.appendChild(addTaskButton);\r\n\r\n  //makes taskColumnForm reset and disappear\r\n  taskColumnForm.reset();\r\n  taskColumnForm.style.display = \"none\";\r\n\r\n  \r\n  //writes task column object to local storage\r\n  let taskColumnObject = {\r\n    \"id\": taskcolumn.id,\r\n    \"columnName\": taskcolumn.columnName,\r\n    \"columnColor\": taskcolumn.columnColor\r\n  }\r\n\r\n  let taskColumns;\r\n\r\n  if(localStorage.getItem(\"taskColumns\") == null){\r\n    taskColumns = [];\r\n  }\r\n  else{\r\n    taskColumns = localStorage.getItem(\"taskColumns\");\r\n    taskColumns = JSON.parse(taskColumns);\r\n  }\r\n\r\n  let existingTaskColumn = taskColumns.find(function(taskcolumns){\r\n    return taskcolumns.id === taskcolumn.id;\r\n  })\r\n\r\n  if(!existingTaskColumn){\r\n    taskColumns.push(taskColumnObject);\r\n    let taskColumnJSON = JSON.stringify(taskColumns);\r\n    localStorage.setItem(\"taskColumns\", taskColumnJSON);\r\n  }\r\n\r\n\r\n  addTaskButton.addEventListener(\"click\", function(event){\r\n    event.preventDefault();\r\n    tasklist = tasks;\r\n    showAddTaskForm();\r\n  })\r\n\r\n\r\n  taskOutButton.addEventListener(\"click\", function(event){\r\n    event.preventDefault();\r\n    taskColumn.remove();\r\n    localStorage.removeItem(taskColumns);\r\n  })\r\n  \r\n  //puts task column on page in front of the add task column button\r\n  //taskContent.insertBefore(taskColumn, addTaskColumnButton);\r\n\r\n  taskColumnList.append(taskColumn);\r\n}\r\n\r\n//checks if localStorage has something inside\r\n\r\n  /*\r\nif (localStorage.length != 0){\r\n\r\n  //goes through each item in localStorage\r\n  for (let i = 0; i < localStorage.length; i++){\r\n    let keyName = localStorage.key(0);\r\n    let keyValue = localStorage.getItem(keyName);\r\n\r\n    console.log(keyValue);\r\n\r\n    //checks if keyName is taskColumns\r\n    if (keyName == \"taskColumns\"){\r\n      \r\n    }\r\n  }\r\n}\r\n*/\r\n\r\n/*function showLocalColumns(){\r\n  //grabs the key of localStorage item\r\n  let keyName = localStorage.key(0);\r\n  let keyValue = localStorage.getItem(keyName);\r\n  let currentLength = keyValue.length;\r\n  for (let i = 0; i < currentLength; i++){\r\n  \r\n\r\n    if (keyName == \"taskColumns\"){\r\n      let ColumnKey = keyValue[0].columnName;\r\n      let ColumnValue = keyValue[0].columnColor;\r\n    \r\n      addTaskColumn(ColumnKey, ColumnValue);\r\n    }\r\n    //checks if item in local storage has start \"taskColumn\" and creates the column if it does\r\n    \r\n\r\n    //checks if item in local storage has start \"taskList\" and creates the tasklist if it does\r\n    //if keyName == \"tasks\"{\r\n    //  let TaskKey = taskColumnArray[i].id;\r\n    //  let TaskValue = taskColumnArray[i].columnName;\r\n  \r\n    //  addTaskColumn(ColumnKey, ColumnValue);\r\n    //}\r\n  }\r\n}*/"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","module","exports","URL","parcelRequire","resolve","import","meta","url","toString","register","JSON","parse","$127b68ff48610c0b$var$toggler","document","querySelector","$127b68ff48610c0b$var$menu","addEventListener","$3049795ed6568a49$var$numSongs","querySelectorAll","$3049795ed6568a49$var$songIndex","$3049795ed6568a49$var$music","getElementById","$3049795ed6568a49$var$playButton","$3049795ed6568a49$var$pauseButton","$3049795ed6568a49$var$playhead","$3049795ed6568a49$var$timeline","$3049795ed6568a49$var$timer","$3049795ed6568a49$var$duration","duration","$3049795ed6568a49$var$volumeSlider","$3049795ed6568a49$var$prevSong","$3049795ed6568a49$var$nextSong","$3049795ed6568a49$var$playlistButton","$3049795ed6568a49$var$songList","$3049795ed6568a49$var$currentSongName","$3049795ed6568a49$var$currentArtist","$3049795ed6568a49$var$timeUpdate","playPercent","currentTime","style","width","offsetWidth","secondsIn","Math","floor","minutesIn","innerHTML","String","padStart","display","pause","songInfo","parentNode","children","innerHTMl","play","onclick","forEach","item","event","songId","parseInt","substring","e","volume","currentTarget","value","classList","toggle","$c0b4664e380dbbbe$var$taskForm","$c0b4664e380dbbbe$var$taskColumnForm","$c0b4664e380dbbbe$var$taskColumnList","$c0b4664e380dbbbe$var$tasklist","$c0b4664e380dbbbe$var$taskNameInput","$c0b4664e380dbbbe$var$taskDueInput","$c0b4664e380dbbbe$var$taskCompInput","$c0b4664e380dbbbe$var$taskPriorityInput","$c0b4664e380dbbbe$var$taskListArray","$c0b4664e380dbbbe$var$taskColumnArray","$c0b4664e380dbbbe$var$showAddTaskForm","preventDefault","taskName","dueDate","estimatedTime","priorityRating","completionStatus","dateCreated","Date","getFullYear","task","now","push","task1","taskCard","createElement","setAttribute","add","taskCardTitle","taskCardHeader","appendChild","taskCardInfo","priorityColor","priorityText","toUpperCase","insertAdjacentText","totalMinutes","hours","minutes","taskCardIcons","delButton","delButtonImg","src","alt","compNoButton","compNoButtonImg","compYesButton","compYesButtonImg","reset","tasks","taskObject","localStorage","getItem","existingTask","find","taskJSON","stringify","setItem","remove","removeItem","$c0b4664e380dbbbe$var$addTask","options","selectedIndex","columnName","columnColor","taskcolumn","taskColumn","minHeight","backgroundColor","taskColumnHead","taskOutButton","taskOutImg","addTaskButton","addTaskButtonIcon","taskColumns","taskColumnObject","taskcolumns","taskColumnJSON","$c0b4664e380dbbbe$var$addTaskColumn","taskColumnName","colorpicker"],"version":3,"file":"index.249a0d77.js.map"}