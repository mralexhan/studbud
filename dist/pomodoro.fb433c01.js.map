{"mappings":"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","sources":["public/pomodoro.js"],"sourcesContent":["//import \"./components/navmenu\";\r\n\r\n/*javascript for the nav bar to be able to activate. Code from https://codepen.io/robdongas/pen/MWvKMRp*/\r\nconst toggler = document.querySelector('.menu-toggle');\r\nconst menu = document.querySelector('.menu');\r\n\r\n/*\r\n * Toggles on and off the 'active' class on the menu\r\n * and the toggler button.\r\n */\r\ntoggler.addEventListener('click', () => {\r\n  toggler.classList.toggle('active');\r\n  menu.classList.toggle('active');\r\n})\r\n\r\n\r\n\r\n\r\n//start of pomodoro js\r\n\r\n//gathers data from form and starts timer with that information when user clicks on start button\r\ndocument.getElementById(\"startPomo\").addEventListener(\"click\", determineTimes);\r\n\r\nfunction determineTimes(){\r\n  //grabs values from form\r\n  let PomoMin = parseInt(document.getElementById(\"pomoMin\").value);\r\n  let PomoSec = parseInt(document.getElementById(\"pomoSec\").value);\r\n  let ShortMin = parseInt(document.getElementById(\"shortMin\").value);\r\n  let ShortSec = parseInt(document.getElementById(\"shortSec\").value);\r\n  let LongMin = parseInt(document.getElementById(\"longMin\").value);\r\n  let LongSec = parseInt(document.getElementById(\"longSec\").value);\r\n  \r\n  //checks how many milliseconds need to go down\r\n  let pomoCurrent = ((PomoMin*60) + PomoSec) * 1000;\r\n  let shortCurrent = ((ShortMin*60) + ShortSec) * 1000;\r\n  let longCurrent = ((LongMin*60) + LongSec) * 1000;\r\n\r\n  //sets initial text for each timer\r\n  document.getElementById(\"pomoCount\").innerHTML = String(PomoMin).padStart(2, \"0\") + \":\" + String(PomoSec).padStart(2, \"0\");\r\n  document.getElementById(\"shortCount\").innerHTML = String(ShortMin).padStart(2, \"0\") + \":\" + String(ShortSec).padStart(2, \"0\");\r\n  document.getElementById(\"longCount\").innerHTML = String(LongMin).padStart(2, \"0\") + \":\" + String(LongSec).padStart(2, \"0\");\r\n  \r\n\r\n  //creates a waitTime variable that judges when certain things run. This is required because javascript seems to run everything in a function all at once, and we don't want that. To circumvent that, you manually add a wait time so things occur after a specfic time.\r\n  let waitTime = 0;\r\n\r\n  //adds event listener to each stop button in each pomodoro timer\r\n  document.getElementById(\"pomoStop\").addEventListener(\"click\", resetPomo);\r\n  document.getElementById(\"shortStop\").addEventListener(\"click\", resetPomo);\r\n  document.getElementById(\"longStop\").addEventListener(\"click\", resetPomo);\r\n  \r\n  //runs functions for each individual countdown timer in accordance to pomodoro timer rules\r\n  for (let i = 0; i < 4; i++){\r\n\r\n    //makes it so pomoCountdown runs after a certian amount of time has passed\r\n    setTimeout(function(){\r\n      pomoCountdown(PomoMin, PomoSec)}, waitTime);\r\n  \r\n    //adds length of time in pomodoro to wait time.\r\n    waitTime += pomoCurrent;\r\n\r\n    //runs short break countdown timer after pomodoro countdown is finished\r\n    setTimeout(function(){\r\n      shortCountdown(ShortMin, ShortSec)}, waitTime);\r\n\r\n    //adds length of time in short break to wait time\r\n    waitTime += shortCurrent;\r\n    \r\n  }\r\n\r\n  //runs long break countdown timer after pomodoro countdown and short break countdown have both run 4 times (in accordance to the pomodoro rules -> set by above for loop)\r\n  setTimeout(function(){\r\n    longCountdown(LongMin, LongSec)}, waitTime);\r\n\r\n  //adds length of time in long break to wait time\r\n  waitTime += longCurrent;\r\n\r\n  //resets timer to original form after long break is over\r\n  setTimeout(resetPomo, waitTime);\r\n\r\n  \r\n  //function that resets the pomodoro timer to the original form state\r\n  function resetPomo(){\r\n    document.getElementById(\"bigPomo\").style.display = \"block\";\r\n    document.getElementById(\"pomoSmall\").style.display = \"none\";\r\n    document.getElementById(\"shortSmall\").style.display = \"none\";\r\n    document.getElementById(\"longSmall\").style.display = \"none\";\r\n\r\n    //resets the form\r\n    document.getElementById(\"bigPomo\").reset();\r\n\r\n    //clears all possible time intervals\r\n    for (let i = 0; i < 10000; i++){\r\n      clearInterval(i);\r\n    }\r\n  }\r\n  \r\n  \r\n  //function how counting down the pomodoro work time\r\n  function pomoCountdown(PomoMin, PomoSec){\r\n  \r\n    //makes it so only the current timer block is showing\r\n    document.getElementById(\"bigPomo\").style.display = \"none\";\r\n    document.getElementById(\"pomoSmall\").style.display = \"block\";\r\n    document.getElementById(\"shortSmall\").style.display = \"none\";\r\n    document.getElementById(\"longSmall\").style.display = \"none\";\r\n    \r\n    \r\n    let current = ((PomoMin*60) + PomoSec) * 1000;\r\n    \r\n    //removes one second from current every second  \r\n    let pomoInterval = setInterval(countdown, 1000);\r\n    console.log(pomoInterval);\r\n    \r\n    let PomoCount = document.getElementById(\"pomoCount\");\r\n\r\n    //countdown function that removes a second from the timer and shows the remaining time\r\n    function countdown(){\r\n      \r\n      current = current-1000;\r\n      let minLeft = Math.floor((current/1000)/60);\r\n      let secLeft = (current/1000)%60;\r\n\r\n      //sets the text in the box to be the remaining time. Also pads front with 0.\r\n      PomoCount.innerHTML = String(minLeft).padStart(2, \"0\") + \":\" + String(secLeft).padStart(2, \"0\");\r\n  \r\n      //resets the countdown timer and text when current reaches zero\r\n      if (current == 0){\r\n        clearInterval(pomoInterval);\r\n\r\n        PomoCount.innerHTML = String(PomoMin).padStart(2, \"0\") + \":\" + String(PomoSec).padStart(2, \"0\");\r\n      }\r\n    }\r\n    \r\n  }\r\n  \r\n\r\n}\r\n\r\n\r\n//function how counting down the short breaks\r\nfunction shortCountdown(ShortMin, ShortSec){\r\n  //makes it so only the current timer block is showing\r\n  document.getElementById(\"bigPomo\").style.display = \"none\";\r\n  document.getElementById(\"pomoSmall\").style.display = \"none\";\r\n  document.getElementById(\"shortSmall\").style.display = \"block\";\r\n  document.getElementById(\"longSmall\").style.display = \"none\";\r\n  \r\n  let current = ((ShortMin*60) + ShortSec) * 1000;\r\n  \r\n  //removes one second from current every second  \r\n  let shortInterval = setInterval(countdown, 1000);\r\n  console.log(shortInterval);\r\n  \r\n  let ShortCount = document.getElementById(\"shortCount\");\r\n\r\n  //countdown function that removes a second from the timer and shows the remaining time\r\n  function countdown(){\r\n    current = current-1000;\r\n    let minLeft = Math.floor((current/1000)/60);\r\n    let secLeft = (current/1000)%60;\r\n    ShortCount.innerHTML = String(minLeft).padStart(2, \"0\") + \":\" + String(secLeft).padStart(2, \"0\");\r\n\r\n     //resets the countdown timer and text when current reaches zero\r\n    if (current == 0){\r\n      clearInterval(shortInterval);\r\n\r\n      ShortCount.innerHTML = String(ShortMin).padStart(2, \"0\") + \":\" + String(ShortSec).padStart(2, \"0\");\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//function how counting down the long breaks\r\nfunction longCountdown(LongMin, LongSec){\r\n  //makes it so only the current timer block is showing\r\n  document.getElementById(\"bigPomo\").style.display = \"none\";\r\n  document.getElementById(\"pomoSmall\").style.display = \"none\";\r\n  document.getElementById(\"shortSmall\").style.display = \"none\";\r\n  document.getElementById(\"longSmall\").style.display = \"block\";\r\n\r\n  let current = ((LongMin*60) + LongSec) * 1000;\r\n  \r\n  //removes one second from current every second  \r\n  let longInterval = setInterval(countdown, 1000);\r\n  console.log(longInterval);\r\n  \r\n  let LongCount = document.getElementById(\"longCount\");\r\n\r\n  //countdown function that removes a second from the timer and shows the remaining time\r\n  function countdown(){\r\n    current = current-1000;\r\n    let minLeft = Math.floor((current/1000)/60);\r\n    let secLeft = (current/1000)%60;\r\n    LongCount.innerHTML = String(minLeft).padStart(2, \"0\") + \":\" + String(secLeft).padStart(2, \"0\");\r\n\r\n     //resets the countdown timer and text when current reaches zero\r\n    if (current == 0){\r\n      clearInterval(longInterval);\r\n\r\n      LongCount.innerHTML = String(LongMin).padStart(2, \"0\") + \":\" + String(LongSec).padStart(2, \"0\");\r\n    }\r\n  }\r\n  \r\n}"],"names":["toggler","document","querySelector","menu","determineTimes","PomoMin1","parseInt","getElementById","value","PomoSec1","ShortMin","ShortSec","LongMin","LongSec","pomoCurrent","shortCurrent","longCurrent","innerHTML","String","padStart","waitTime","addEventListener","resetPomo","i1","setTimeout","pomoCountdown","shortCountdown","style","display","reset","i","clearInterval","PomoMin","PomoSec","current","pomoInterval","setInterval","minLeft","Math","floor","secLeft","PomoCount","console","log","longCountdown","shortInterval","ShortCount","longInterval","LongCount","classList","toggle"],"version":3,"file":"pomodoro.fb433c01.js.map"}